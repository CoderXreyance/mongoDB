Explanation :-
    Whenever you're asked a question to write a query, Identify two things from the questions, first what's
    the condition or filter criteria and second thing what fields should we show in output.
    because we have syntax of find() such that
        find({'filter criteria'}, {'fields with the value of 1 or 0'}).

1. Write a mongoDB query to display all the documents in the collection restaurants

    db.restaurants.find({})

2. Write a query to display the fields restaurant_id, name, borough and cuisine for all the documents in the
   collection restaurants.

    db.restaurants.find({}, {
        "restaurant_id" : 1,
        "name" : 1,
        "borough" : 1,
        "cousine" : 1
    })

3.  WAQ to display the fields restaurant_id, name, borough, and zip code, but exclude the field _id for all
    the documents in the collection restaurant.

    db.restaurants.find({},
        {
        "restaurant_id" : 1,
        "name" : 1,
        "borough" : 1,
        "address.zipcode" : 1,
        "_id" : 0
        }
    )

4. WAQ to display the next 5 restaurants names after skipping first 5  which are in the borough bronx.
    
    db.restaurants.find({"borough" : "Bronx"},{"name" : 1}).skip(5).limit(5)
                            OR
    db.restaurants.find({"borough" : "Bronx"},{"name" : 1}).limit(5).skip(5)


5. WAQ to find the restaurants that achieved a score more than 80 but less than 100.

    db.restaurants.find({"grades.score" : { $gt : 80, $lt : 100}})

6. WAQ to find the restaurants that do not prepare any cuisine of "American" and their grade score are more
   than 70 and latitude less than -65.754168.

   db.restaurants.find(
    {
        "cuisine" : {$ne : "American"},
        "grades.score" : {$gt : 70},
        "address.coord.0" : { $lt : -65.7514168}
    }
   )


7. WAQ to find the restaurants which do not prepar any cuisine of "American" and achieved a grade point 'A'
   not belongs to the borough Brooklyn. The documents must be displayed according to the cuisine in descending
   order.

   db.restaurants.find(
    {
        "cuisine" : {$ne : 'American'},
        "grades.grade" : 'A',
        "borough" : {$ne : "Brooklyn"},
    }
   ).sort({"cuisine" : -1})

8. WAQ to find teh restaurants which do not prepare any cuisine of 'American' and achieved a score more than 70
    and located in the longitude less than 65.754168.
    Note : Do this query with using $and operator

  db.restaurants.find({
  $and: [
      { "cuisine" : { $ne: "American" } },
      { "grades.score" : { $gt: 70 } },             
      { "address.coord.1" : { $lt:  65.754168  } } 
    ]
  });

9. WAQ to find the restaurants _id, name , borough and cuisine for those restaurants which contain 'Wil' as
    first three letters for it's name.

    db.restaurants.find(
        { 
            "name" : { $regex : /^Wil/ }
        },
        {
            "restaurant_id" : 1,
            "name" : 1,
            "borough" : 1,
            "cuisine" : 1
        }
        
    )

10. WAQ to find the restaurant id, name, borough and cuisine for those restaurants which contain 'ces' as
    last three letters for it's name

    db.restaurants.find(
        {
            "name" : { $regex : /ces$/}
        },
        {
            "restaurant_id" : 1,
            "name" : 1,
            "borough" : 1,
            "cuisine" : 1
        }
    )


11. WAQ to find the restaurants names for those restaurants which contain 'Reg' as three letters somewhere
    in its name.

    db.restaurants.find(
        { "name" : { $regex : /Reg/}},
        { "name" : 1}
    )

12. WAQ to find the restaurants which belong to the borough bronx and prepared either American or Chinese
    dish.

    db.restaurants.find(
        {
            "borough" : "Bronx",
            "cuisine" : { $in : ['American','Chinese']}
        }
    )


13. WAQ 











